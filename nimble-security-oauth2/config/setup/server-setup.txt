#1. Install supervisor
#   sudo easy_install pip
#   sudo pip install supervisor


#2. Put installation configs in place
#   install /etc/supervisord.conf
#   install /etc/supervisor/ contents (supervised will look for conf files in subdirs placed here i.e. jboss/XYZ.conf)

3. Place configured jboss-as-7.1.1.Final in /usr/local/
#i.e. rsync -avc --delete --exclude "tmp/*" --exclude "work/*" --exclude="log/*" /Users/Shared/coding/servers/jboss/jboss-as-7.1.1.Final api2.bill1.ninternal.com:~/

2. Symlink /usr/local/jboss-as-7.1.1.Final /usr/local/jboss
3. Install nimble.sh to /etc/profile.d (nimble.sh.[env] -> /etc/profile.d/nimble.sh)
4. mkdir /etc/jboss-as; place jboss init.d files (.conf and .sh) here
4.1 sudo ln -s /etc/jboss-as/jboss-as-standalone.sh /etc/init.d/jboss

6. sudo mkdir -p /var/log/jboss-as
   sudo chown jboss:jboss /var/log/jboss-as
   sudo chown -R jboss:jboss /usr/local/jboss-as-7.1.1.Final

7. Install cron script to make sure JBoss is in correct up/down state
place jboss-up.sh in /etc/jboss-as
place jboss.cron.d in /etc/cron.d


4. Port 8080 will server content to LB
5. Port 9990 will server admin console - should be accessible via remote web browser when on VPN
6. To run: sudo service jboss [start|stop|restart|status]

DB:
1. Import the apigee source data:
mysql -u root -p < mysqldump_apigerailsdb_case305226_jun14_2013.sql (replace with updated file name here)

2. Execute apigee1.sql against just created apigeedb

3. Execute nimble-setup1.sql in Nimble target db to create oauth tables and populate them
****MAKE SURE TO UPDATE THE APIGEE DB NAME IF NEED BE BEFORE RUNNING****

4. Run Java app to massage old data into new schema
****MAKE SURE TO UPDATE THE APIGEE DB NAME IF NEED BE BEFORE RUNNING****